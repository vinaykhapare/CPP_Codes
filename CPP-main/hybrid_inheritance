#include <iostream>
using namespace std;

// Base class
class Base {
public:
    void display() {
        cout << "This is Base class." << endl;
    }
};

// First derived class
class Derived1 : public Base {
public:
    void display() {
        cout << "This is Derived1 class." << endl;
    }
};

// Second derived class
class Derived2 {
public:
    void display() {
        cout << "This is Derived2 class." << endl;
    }
};

// Derived class from both Derived1 and Derived2
class DerivedHybrid : public Derived1, public Derived2 {
public:
    void display() {
        cout << "This is DerivedHybrid class." << endl;
    }
};

int main() {
    // Creating object of DerivedHybrid class
    DerivedHybrid obj;
    
    // Accessing display function of DerivedHybrid class
    obj.display();
    
    // Accessing display function of Derived1 class
    obj.Derived1::display();
    
    // Accessing display function of Derived2 class
    obj.Derived2::display();

    // Accessing display function of Base class
    obj.Base::display();

    return 0;
}
